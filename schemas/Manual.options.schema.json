{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://raw.githubusercontent.com/ManualForArchipelago/Manual/main/schemas/Manual.options.schema.json",
    "description": "Schema for Manual's options.json",
    "type": "object",
    "items": {
        "$ref": "#/definitions/Option"
    },
    "properties": {
        "$schema": {
            "type":"string",
            "description": "The schema to verify this document against."
        },
        "data": {
            "description": "dict of options for this apworld",
            "type": "object",
            "patternProperties": {
                "^_.*$": {"description": "A commented out Option", "$ref": "#/definitions/Option"},
                "^goal$": {
                    "description": "An override for the goal option",
                    "$ref": "#/definitions/goalOverride"
                },
                "^filler_traps$": {
                    "description": "An override for the filler_traps option",
                    "$ref": "#/definitions/filler_trapsOverride"
                },
                "^death_link$": {
                    "description": "An override for the death_link option",
                    "$ref": "#/definitions/death_linkOverride"
                },
                "^.*$": {
                    "description": "An Option for your World, the possible Parameters depend on the type of option you set in \"type\"\nToggle: \"default\" \n Let the player choose between yes or no \nChoice: \"value\", \"aliases\", \"default\" and \"allow_custom_value\" \n Let the player pick from a list of values  \nRange: \"range_start\", \"range_end\", \"default\" and an optional \"values\"\nAllow the player to specify a number between 'start' and 'end'",
                    "$ref": "#/definitions/Option"
                }
            }
        },
        "_comment": {"$ref": "#/definitions/comment"}
    },
    "definitions": {
        "Option": {
            "type": "object",
            "properties": {
                "display_name": {
                    "description": "The name shown on the webhost.",
                    "type": "string"
                },
                "type": {
                    "description": "The type of this options, check the official Archipelago docs for the options types here: \nhttps://github.com/ArchipelagoMW/Archipelago/blob/main/docs/options%20api.md#basic-option-classes",
                    "type": "string",
                    "enum": ["Toggle", "Choice", "Range"]
                },
                "description": {
                    "description": "long description of what this option is for(is shown on hover on the webhost)",
                    "type": ["array", "string"],
                    "items": {"type": "string"}
                },
                "rich_text_doc": {
                    "description": "(Optional) support for HTML generated from the standard Python reStructuredText format for your description. \nfor more info: https://github.com/ArchipelagoMW/Archipelago/blob/main/docs/options%20api.md#option-documentation",
                    "type": "boolean",
                    "default": false
                },
                "group": {
                    "description": "(Optional) The name of the group this option is a part of on the webhost",
                    "type": "string",
                    "default": "Game Options",
                    "examples": ["Item & Location Options", "Example Options", "Option Group Name"]
                },
                "hidden": {"$ref": "#/definitions/hidden"},
                "visibility": {
                    "description": "(Optional) (Advanced) Specify where this option can be seen. \nIt can be represented by the value names, an array of those, \nthe binary string representation of that choice (\"0b1111\") or the integer value of the binary \nEvery example values other than 'none' and 'all' gives the same results aka 14 aka 0b1110 aka that array \nMore info at https://github.com/ArchipelagoMW/Archipelago/blob/main/docs/options%20api.md#option-visibility",
                    "type":["string","array","integer"],
                    "items": {"type": "string", "enum": [ "template", "simple_ui", "complex_ui", "spoiler"]},
                    "default": "all",
                    "examples": ["none", "0b1110", ["spoiler", "simple_ui", "complex_ui"], 14 ],
                    "if": {"type":"string", "pattern": "0b[01]..."},
                    "else": {"if": {"type": "string"}, "then": {"enum": ["all", "none", "template", "simple_ui", "complex_ui", "spoiler"]} }
                },
                "_comment": {"$ref": "#/definitions/comment"}
            },
            "required": ["type"],
            "if": {"properties": { "type": {"const": "Toggle"}}},
            "then": {
                "properties": {
                    "default": { "$ref": "#/definitions/DefaultToggle"}
                },
                "required": ["default", "type"]
            },
            "else": {
                "if": {"properties": { "type": {"const": "Choice"}}},
                "then": {
                    "properties": {
                        "values": {"$ref": "#/definitions/ChoiceValue"},
                        "aliases": {"$ref": "#/definitions/ChoiceAlias"},
                        "default": {"$ref": "#/definitions/DefaultInt"},
                        "allow_custom_value": { "$ref": "#/definitions/ChoiceUserInput"}
                    },
                    "required": ["values", "type"]
                },
                "else": {
                    "if": {"properties": { "type": {"const": "Range"}}},
                    "then": {
                        "properties": {
                            "range_start": {"$ref": "#/definitions/rangeStart"},
                            "range_end": {"$ref": "#/definitions/rangeEnd"},
                            "default": {"$ref": "#/definitions/DefaultInt"},
                            "values":{"$ref": "#/definitions/special_range_names"}
                        }
                    }
                }
            }
        },
        "basicOverride": {
            "type": "object",
            "properties": {
                "display_name": {"$ref": "#/definitions/Option/properties/display_name"},
                "description": {"$ref": "#/definitions/Option/properties/description"},
                "rich_text_doc": {"$ref": "#/definitions/Option/properties/rich_text_doc"},
                "group": {"$ref": "#/definitions/Option/properties/group"},
                "hidden": {"$ref": "#/definitions/hidden"},
                "visibility": {"$ref": "#/definitions/Option/properties/visibility"},
                "_comment": {"$ref": "#/definitions/comment"}
            }
        },
        "goalOverride": {
            "allOf": [ {"$ref": "#/definitions/basicOverride"}],
            "properties": {
                "default": {"$ref": "#/definitions/DefaultInt"},
                "aliases": {"$ref": "#/definitions/ChoiceAlias"}
            }

        },
        "death_linkOverride": {
            "allOf": [{"$ref": "#/definitions/basicOverride"}],
            "properties": {"default": {"$ref": "#/definitions/DefaultToggle"}}
        },
        "filler_trapsOverride": {
            "allOf": [{"$ref": "#/definitions/basicOverride"}],
            "properties": {"default": {"$ref": "#/definitions/DefaultInt"}}
        },
        "hidden": {
            "description": "(Optional) Should this option be Hidden everywhere? Use Visibility instead for a more precise control",
            "type": "boolean",
            "default": false
        },
        "ChoiceValue": {
            "description": "A dict of possible values in the format 'name':int \nthe default option is, by default the one with 0 as value",
            "type":"object",
            "patternProperties": {
                "^.*$": {
                    "description": "An int value this option can have",
                    "type": "integer"
                }
            }
        },
        "ChoiceAlias": {
            "description": "A dict of possible values in the format 'name':int/the name of a value from 'values'",
            "type": "object",
            "patternProperties": {
                "^.*$": {
                    "description": "An alias for a value declared in 'values'",
                    "type": ["integer", "string"]
                }
            }
        },
        "ChoiceUserInput": {
            "description": "Allow the user to set their own custom string Value",
            "type": "boolean",
            "default": false
        },
        "rangeStart": {
            "type": "integer",
            "description": "The lowest Value for this range",
            "default": 0
        },
        "rangeEnd": {
            "type":"integer",
            "description": "The Highest Value for this range",
            "default": 1
        },
        "special_range_names": {
            "description": "(Optional) A Special Dictionary in the format 'name':int of named values for this range \nAll names need to be lowercase",
            "type":"object",
            "patternProperties": {
                "^.*$": {
                    "description": "A named numerical value",
                    "type": "integer"
                    }
            },
            "default": {},
            "examples": [{"test": 1}]
        },
        "DefaultInt": {
            "description": "the default integer value of this option",
            "type": "integer",
            "default": 0
        },
        "DefaultToggle": {
            "description": "the default value of this Toggle",
            "type": "boolean",
            "default": false
        },
        "comment": {
            "description": "(Optional) Does nothing, Its mainly here for Dev notes for future devs to understand your logic",
            "type": ["string", "array"],
            "items": {
                "description": "A line of comment",
                "type":"string"
            }
        }
    }
}